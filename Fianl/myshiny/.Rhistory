View(ath3)
View(ath1)
View(ath1B)
View(ath2A)
View(gen4)
View(gen3)
View(gen1)
View(gen4)
ggplot(datamerge3,aes(x=gen_ave,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(datamerge4,aes(x=gen_ave,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
View(dm5)
library(stringr)
gender <-read.csv("Gender_wewant1.csv")
any(is.na(gender))
#summary(gender)
library(dplyr)
library(tidyr)
library(ggplot2)
colnames(gender)<-c("Country.Code","Country.Name","Series.Name",as.character(c(1992:2016)))
gen1<-cbind(gender[,1],gender[,4:28])
gen1[264:526,2:26]<-(gen1[264:526,2:26]*(-1)+1000)/10
gen1[1316:1578,2:26]<-gen1[1316:1578,2:26]*5
colnames(gen1)<-c("Country.Code",as.character(c(1992:2016)))
gen2<-gather(gen1,year,gender_var,-Country.Code)
gen3<-unite(gen2,Country.Code_year,Country.Code,year,sep='_')
gen4<-na.omit(gen3)%>%
group_by(Country.Code_year)%>%
summarize(ave=mean(gender_var))
ath<- read.csv("athlete_wewant.csv")
ath['num']=1
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath1A<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year)%>%summarize(join_people=sum(num))
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
View(ath)
View(ath1)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath1A<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year)%>%summarize(join_people=sum(num))
ath1B<-unite(ath1A,NOC,NOC,Year,sep='_')
View(ath1A)
View(ath2B)
View(ath1B)
View(ath2C)
ath3<-merge(ath2C,ath1B,by="NOC")
ath3["Fscore"]=ath3[,2]/ath3[,3]
colnames(gen4)=c('NOC',"gen_ave")
datamerge2=merge(ath3,gen4,by="NOC",all=T)
datamerge3<-na.omit(datamerge2)
datamerge4<-datamerge3%>%filter(gen_ave<=65)
ggplot(datamerge4,aes(x=gen_ave,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
View(dm5)
View(dm4)
View(datamerge4)
setwd("C:/Users/hank7/Desktop/summer/NTU-R/Fianl")
dm5 <-read.csv("dm5.csv")
View(dm5)
View(dm5)
library(stringr)
dm5 <-read.csv("dm5.csv")
#any(is.na(gender))
#summary(gender)
library(dplyr)
library(tidyr)
library(ggplot2)
ggplot(dm5,aes(x=gen_ave,y=Female_score))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=gen_ave,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=enrollment,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Adolescent_fertility,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=adolescent_fertility,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Labor,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=schooling_year,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Schooling_years,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Primary_edu,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Employer,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()+scale_x_log10()
library(stringr)
dm5 <-read.csv("dm5.csv")
#any(is.na(gender))
#summary(gender)
library(dplyr)
library(tidyr)
library(ggplot2)
ggplot(dm5,aes(x=gen_ave,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=enrollment,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=adolescent_fertility,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Labor,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Schooling_years,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Primary_edu,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Employer,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()+scale_x_log10()
m6 <- lm(Female_score~+enrollment+adolescent_fertility+Labor+Schooling_years+Primary_edu+Employer,data=dm5)
m6 <- lm(Fscore~+enrollment+adolescent_fertility+Labor+Schooling_years+Primary_edu+Employer,data=dm5)
anova(m6)
regtree <- rpart(dm5$Female_score~., data=dm5[,8:10])
prettyTree(regtree)
regtree <- rpart(dm5$Female_score~., data=dm5[,8:10])
regtree <- rpart(dm5$Fscore~., data=dm5[,8:10])
prettyTree(regtree)
regtree <- rpart(dm5$Fscore~., data=dm5[,9:11])
prettyTree(regtree)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(rpart)
library(DMwR)
library(grid)
setwd("C:/Users/hank7/Desktop/summer/NTU-R/Fianl")
any(is.na(dm5))
head(dm5)
summary(dm5)
ggplot(dm5,aes(x=gen_ave,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=gen_ave,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=enrollment,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=adolescent_fertility,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Labor,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Schooling_years,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Primary_edu,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()
ggplot(dm5,aes(x=Employer,y=Fscore))+geom_point()+geom_smooth(method="lm")+scale_y_log10()+scale_x_log
m6 <- lm(Fscore~+enrollment+adolescent_fertility+Labor+Schooling_years+Primary_edu+Employer,data=dm5)
anova(m6)
regtree <- rpart(dm5$Fscore~., data=dm5[,9:11])
prettyTree(regtree)
rf2 <- randomForest(dm5$Female_score~., data=dm5[,8:10], ntree=500, importance=T)
rf2 <- randomForest(dm5$Fscore~., data=dm5[,8:10], ntree=500, importance=T)
library(randomForest)
library(coefplot)
rf2 <- randomForest(dm5$Fscore~., data=dm5[,8:10], ntree=500, importance=T)
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(rpart)
library(DMwR)
library(grid)
library(coefplot)
coefplot( lm(Female_score~+enrollment+Adolescent_fertility+Labor+schooling_year+Primary_edu+Employer,data=dm5))
coefplot( lm(Fscore~+enrollment+adolescent_fertility+Labor+Schooling_years+Primary_edu+Employer,data=dm5))
set.seed(8000)
rf2 <- randomForest(na.omit(dm5)$Fscore~., data=na.omit(dm5)[,8:10], ntree=500, importance=T)
rf.predictions <- predict(rf2,na.omit(dm5))
nmse.rf <- mean((rf.predictions-na.omit(dm5)[,"Fscore"])^2)/mean(
(mean(na.omit(dm5)$Fscore)-na.omit(dm5)[,"Fscore"])^2)
print(nmse.rf)
na.omit(dm5)
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
# then create the error plot.
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)+
#geom_smooth(method = "lm", se = FALSE)+
#scale_colour_brewer(palette = "Set1",name = "Daily Alcohol \nConsumption")
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
# then create the error plot.
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)
#geom_smooth(method = "lm", se = FALSE)+
#scale_colour_brewer(palette = "Set1",name = "Daily Alcohol \nConsumption")
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
# then create the error plot.
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)
#geom_smooth(method = "lm", se = FALSE)+
#scale_colour_brewer(palette = "Set1",name = "Daily Alcohol \nConsumption")
errplt.rf1
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)
errplt.rf1
varImpPlot(rf2,type=1)
set.seed(8000)
rf2 <- randomForest(na.omit(dm5)$Fscore~., data=na.omit(dm5)[,8:10], ntree=500, importance=T)
rf.predictions <- predict(rf2,na.omit(dm5))
nmse.rf <- mean((rf.predictions-na.omit(dm5)[,"Fscore"])^2)/mean(
(mean(na.omit(dm5)$Fscore)-na.omit(dm5)[,"Fscore"])^2)
print(nmse.rf)
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)
errplt.rf1
varImpPlot(rf2,type=1)
setwd("C:/Users/hank7/Desktop/summer/NTU-R/Fianl")
setwd("C:/Users/hank7/Desktop/summer/NTU-R/Fianl")
library(sf)
install.packages("sf")
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
View(raw_gender)
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
View(gender_map)
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if((i >= 17) == (i < 41)){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]] + gender_map[[i-1]] + gender_map[[i-2]]) /4
}
}
View(gender_map)
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
View(gender_map)
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if((i >= 17) == (i < 41)){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]] + gender_map[[i-1]] + gender_map[[i-2]]) /4
}
}
library(tidyr)
ath<- read.csv("athlete_wewant.csv")
ath['num']=1
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath1A<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year)%>%summarize(join_people=sum(num))
ath1B<-unite(ath1A,NOC,NOC,Year,sep='_')
ath2A<-ath1%>%filter(Sex=="F")
ath2B<-unite(ath2A,NOC,NOC,Year,sep='_')
ath2C<-data.frame(ath2B[,1],ath2B[,3])
ath3<-merge(ath2C,ath1B,by="NOC")
ath3["Fscore"]=(ath3[,2]/ath3[,3])
library(tidyr)
ath<- read.csv("athlete_wewant.csv")
ath['num']=1
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
View(ath)
ath%>%filter(Year>=1990)
ath%>%filter(`Year`>=1990)
library(dplyr)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath1A<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year)%>%summarize(join_people=sum(num))
ath1B<-unite(ath1A,NOC,NOC,Year,sep='_')
ath2A<-ath1%>%filter(Sex=="F")
ath2B<-unite(ath2A,NOC,NOC,Year,sep='_')
ath2C<-data.frame(ath2B[,1],ath2B[,3])
ath3<-merge(ath2C,ath1B,by="NOC")
ath3["Fscore"]=(ath3[,2]/ath3[,3])
View(ath3)
#plotting
gender_map%>%
filter(Series.Name == 'Adjusted net enrollment rate, primary, female (% of primary school age children)')%>%
select('2010')%>%
ggplot() +
geom_sf(aes(fill=`2010`))+
scale_fill_gradient(low = "#FFE4F3", high = "#F62018")
View(gender_map)
#plotting
gender_map%>%
filter(Series.Name == 'Population, female (% of total)')%>%
select('2010')%>%
ggplot() +
geom_sf(aes(fill=`2010`))+
scale_fill_gradient(low = "#FFE4F3", high = "#F62018")
setwd("C:/Users/hank7/Desktop/summer/NTU-R/Fianl")
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(rpart)
library(DMwR)
library(grid)
library(coefplot)
library(randomForest)
dm5 <-read.csv("dm5.csv")
any(is.na(dm5))
head(dm5)
summary(dm5)
m6 <- lm(Fscore~+enrollment+adolescent_fertility+Labor+Schooling_years+Primary_edu+Employer,data=dm5)
anova(m6)
regtree <- rpart(dm5$Fscore~., data=dm5[,9:11])
prettyTree(regtree)
set.seed(8000)
rf2 <- randomForest(na.omit(dm5)$Fscore~., data=na.omit(dm5)[,8:10], ntree=500, importance=T)
rf.predictions <- predict(rf2,na.omit(dm5))
nmse.rf <- mean((rf.predictions-na.omit(dm5)[,"Fscore"])^2)/mean(
(mean(na.omit(dm5)$Fscore)-na.omit(dm5)[,"Fscore"])^2)
print(nmse.rf)
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)
errplt.rf1
varImpPlot(rf2,type=1)
set.seed(8000)
rf2 <- randomForest(na.omit(dm5)$Fscore~., data=na.omit(dm5)[,8:10], ntree=500, importance=T)
rf.predictions <- predict(rf2,na.omit(dm5))
nmse.rf <- mean((rf.predictions-na.omit(dm5)[,"Fscore"])^2)/mean(
(mean(na.omit(dm5)$Fscore)-na.omit(dm5)[,"Fscore"])^2)
print(nmse.rf)
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)
errplt.rf1
varImpPlot(rf2,type=1)
rf.plt.data1 <- data.frame(cbind(rf.predictions,na.omit(dm5)[,"Fscore"]))
colnames(rf.plt.data1)<-c("rf.predictions","Fscore")
errplt.rf1 <- ggplot(rf.plt.data1,aes(rf.predictions,Fscore))+
geom_point()+
xlab("Predicted Scores")+
ylab("Actual Scores")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)+coord_flip()
errplt.rf1
varImpPlot(rf2,type=1)
regtree <- rpart(dm5$Fscore~., data=dm5[,9:11])
prettyTree(regtree)
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, dm5[,6:11], impvar[i], rug=TRUE, xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
abline(h=mean(dm5$fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, dm5[,6:11], impvar[i], rug=TRUE, xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
abline(h=mean(dm5$fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, dm5[,6:11], impvar[i], rug=TRUE, xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
abline(h=mean(dm5$Fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,6:11], impvar[i], rug=TRUE, xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,8:10], impvar[i], rug=TRUE, xlab=impvar[i],
main=paste("Partial Dependence on", impvar[i]))
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,8:10], impvar[i], rug=TRUE, xlab=impvar[i])
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,8:10], impvar[i], rug=TRUE)
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,8:10], impvar[i], rug=TRUE, xlab=impvar[i],main=paste(impvar[i]))
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
library(stringr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(rpart)
library(DMwR)
library(grid)
library(coefplot)
library(randomForest)
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,8:10], impvar[i], rug=TRUE, xlab=impvar[i],main=paste(impvar[i]))
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
library(sf)
library(ggplot2)
worldmap <- st_read("TM_WORLD_BORDERS-0.3.shp",stringsAsFactors=FALSE,quiet=TRUE)
names(worldmap)[3] <- paste('Country.Code')
worldmap <- st_transform(worldmap, "+init=esri:54030")
raw_gender <- read.csv('Gender_wewant.csv')
gender_map <- merge(worldmap, raw_gender, by="Country.Code")
library(stringr)
for (i in 15:ncol(gender_map)-1){
names(gender_map)[i] <- str_sub(names(gender_map)[i],-5,-2)
if((i >= 17) == (i < 41)){
gender_map[i+1] <- (gender_map[[i+1]] + gender_map[[i]] + gender_map[[i-1]] + gender_map[[i-2]]) /4
}
}
library(tidyr)
library(dplyr)
ath<- read.csv("athlete_wewant.csv")
ath['num']=1
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath1A<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year)%>%summarize(join_people=sum(num))
ath1B<-unite(ath1A,NOC,NOC,Year,sep='_')
ath2A<-ath1%>%filter(Sex=="F")
ath2B<-unite(ath2A,NOC,NOC,Year,sep='_')
ath2C<-data.frame(ath2B[,1],ath2B[,3])
ath3<-merge(ath2C,ath1B,by="NOC")
ath3["Fscore"]=(ath3[,2]/ath3[,3])
#plotting
gender_map%>%
filter(Series.Name == 'Population, female (% of total)')%>%
select('2010')%>%
ggplot() +
geom_sf(aes(fill=`2010`))+
scale_fill_gradient(low = "#FFE4F3", high = "#F62018")
library(dplyr)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath%>%filter(Year>=1990)
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
View(ath)
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
?summarize
install.packages("plyr")
library(plyr)
library(dplyr)
library(plyr)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath1A<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year)%>%summarize(join_people=sum(num))
ath1B<-unite(ath1A,NOC,NOC,Year,sep='_')
View(ath1A)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
library(dplyr)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
View(ath1)
ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)
View(ath1)
?group_by
View(ath)
ath1<-ath%>%filter(Year>=1990)
View(ath1)
library(dplyr)
ath1<-ath%>%filter(Year>=1990)%>%group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
View(ath1)
ath1<-ath%>%filter(Year>=1990)%>% group_by(NOC,Year,Sex)
View(ath1)
ath1<-ath%>%filter(Year>=1990)%>% group_by(c(NOC,Year,Sex))
ath1<-ath%>%filter(Year>=1990)%>% group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
View(ath1)
View(ath)
ath$Team=NULL
ath1<-ath%>%filter(Year>=1990)%>% group_by(NOC,Year,Sex)%>%summarize(Medal_sum=sum(Medal_score),people=sum(num))
View(ath1)
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,8:10], impvar[i], rug=TRUE, xlab=impvar[i],main=paste(impvar[i]))
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
imp <- importance(rf2)
impvar <- rownames(imp)[order(imp[, 1], decreasing=TRUE)]
op <- par(mfrow=c(2, 3))
for (i in seq_along(impvar)) {
partialPlot(rf2, na.omit(dm5)[,8:10], impvar[i], rug=TRUE, xlab=impvar[i],main=paste(impvar[i]))
abline(h=mean(na.omit(dm5)$Fscore),col="red")
}
setwd("F:/final")
shiny::runApp()
runApp()
gender_map<-read.csv("gender_map")
setwd("F:/final")
gender_map<-read.csv("gender_map")
gender_map<-read.csv("gender_map.csv")
setwd("C:/Users/hank7/Desktop/summer/NTU-R/Fianl")
