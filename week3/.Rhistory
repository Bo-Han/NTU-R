p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
fviz_eig(t_pca)
library(factoextra)
install.packages("ggplot2")
install.packages("ggplot2")
library(factoextra)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(XML)
library(knitr)
library(bitops)
library(httr)
library(RCurl)
library(tm)
library(NLP)
library(tmcn)
library(factoextra)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(XML)
library(knitr)
fviz_eig(t_pca)
library(factoextra)
install.packages("factoextra")
library(factoextra)
fviz_eig(t_pca)
library(bitops)
library(httr)
library(RCurl)
library(tm)
library(NLP)
library(tmcn)
library(factoextra)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(XML)
library(knitr)
# INPUT DATA
d.corpus <- Corpus( DirSource("./DATA" ))
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
# TDM
mixseg = worker()
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
n = length(seg)
TDM = tokens[[1]]
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
kable(head(TDM))
# TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
tt=rbind(t,ti)
tt=tt[-121,]
tt = apply(t, 2, as.numeric) #變成矩陣
tt=tt+0.0000000001
tt = as.data.frame(tt)
t_vec=c(1:120)
t_vec[1:80]='former80'
t_vec[81:120]='later40'
t_group=factor(t_vec,levels=c('former80','later40'))
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
# TDM
mixseg = worker()
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
# INPUT DATA
d.corpus <- Corpus( DirSource("./DATA" ))
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
# INPUT DATA
d.corpus <- Corpus( DirSource("./DATA" ))
setwd("C:/Users/hank7/Desktop/summer/NTU-R/week3")
# INPUT DATA
d.corpus <- Corpus( DirSource("./DATA" ))
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
# TDM
mixseg = worker()
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
n = length(seg)
TDM = tokens[[1]]
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
kable(head(TDM))
# TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
tt=rbind(t,ti)
tt=rbind(t,ti)
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
tt=rbind(t,ti)
tt=tt[-121,]
tt = apply(t, 2, as.numeric) #變成矩陣
tt=tt+0.0000000001
tt = as.data.frame(tt)
t_vec=c(1:120)
t_vec[1:80]='former80'
t_vec[81:120]='later40'
t_group=factor(t_vec,levels=c('former80','later40'))
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
fviz_eig(t_pca)
kmeansData = t_pca$rotation[,1:2]
cl <- kmeans(kmeansData, 2)
plot(kmeansData, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
plot(kmeansData, col = cl$cluster)
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
plot(x[,1], x[,2])
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
(cl <- kmeans(x, 5, nstart = 25))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:5, pch = 8)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
data(iris)
ir.pca <- prcomp(iris[,1:4])
ir.species <- iris[, 5]
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1,
groups = ir.species, ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
scatter <- ggplot(data=iris, aes(x = Petal.Length, y = Sepal.Width))
scatter + geom_point(aes(color=Species, shape=Species)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
library(bitops)
library(httr)
library(RCurl)
library(tm)
library(NLP)
library(tmcn)
library(factoextra)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(XML)
library(knitr)
# INPUT DATA
d.corpus <- Corpus( DirSource("./DATA" ))
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
# TDM
mixseg = worker()
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
n = length(seg)
TDM = tokens[[1]]
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
kable(head(TDM))
# TF-IDF
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
t = apply(t[,1:10], 2, as.numeric)
t = apply(t[,1:10], 1, as.numeric)
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
fviz_eig(t_pca)
kmeansData = t_pca$rotation[,1:2]
cl <- kmeans(kmeansData, 2)
plot(kmeansData, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
kmeansData = t_pca$rotation[,1:2]
cl <- kmeans(kmeansData, 2)
plot(kmeansData, col = cl$cluster)
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
View(head(T))
View(head(t))
t = apply(t[,1:10], 2, as.numeric)
t = t[-1,]
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
t = apply(t[,1:10], 2, as.numeric)
t = apply(t[,1:10], 1, as.numeric)
class(t)
t=data.frame(t)
class(t[1:3])
class(t[1,3])
t_pca = prcomp(t)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
fviz_eig(t_pca)
p
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
t = apply(t[,1:2000], 2, as.numeric)
t = apply(t[,1:2000], 1, as.numeric)
t=data.frame(t)
t_pca = prcomp(t)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
p
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
t = apply(t[,1:200], 2, as.numeric)
t = apply(t[,1:200], 1, as.numeric)
t=data.frame(t)
t_pca = prcomp(t)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
p
fviz_eig(t_pca)
kmeansData = t_pca$rotation[,1:2]
cl <- kmeans(kmeansData, 2)
plot(kmeansData, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
t = apply(t[,1:500], 2, as.numeric)
t = apply(t[,1:500], 1, as.numeric)
t=data.frame(t)
t_pca = prcomp(t)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
p
fviz_eig(t_pca)
kmeansData = t_pca$rotation[,1:2]
cl <- kmeans(kmeansData, 2)
plot(kmeansData, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
t = apply(t[,1:100], 2, as.numeric)
t = apply(t[,1:100], 1, as.numeric)
t=data.frame(t)
t_pca = prcomp(t)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
p
fviz_eig(t_pca)
kmeansData = t_pca$rotation[,1:2]
cl <- kmeans(kmeansData, 2)
plot(kmeansData, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
fviz_pca_ind(t_pca, geom.ind = c("point"), col.ind = "cos2")
fviz_pca_var(t_pca, col.var = "contrib",repel = TRUE)
fviz_pca_biplot(t_pca, geom.ind = "point",repel = TRUE)
t.eig <- get_eig(t_pca)
t.var <- get_pca_var(t_pca)
t.ind <- get_pca_ind(t_pca)
t.eig
ind.coord2 <- t.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
library(bitops)
library(httr)
library(RCurl)
library(tm)
library(NLP)
library(tmcn)
library(factoextra)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(XML)
library(knitr)
library(bitops)
library(httr)
library(RCurl)
library(tm)
library(NLP)
library(tmcn)
library(factoextra)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(XML)
library(knitr)
d.corpus <- Corpus( DirSource("./DATA" ))
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
mixseg = worker()
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
n = length(seg)
TDM = tokens[[1]]
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
kable(head(TDM))
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
t = as.data.frame(t(doc.tfidf))
t = t[-1,]
t = apply(t[,1:100], 2, as.numeric)
t = apply(t[,1:100], 1, as.numeric)
t=data.frame(t)
t_pca = prcomp(t)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
p
fviz_eig(t_pca)
fviz_pca_ind(t_pca, geom.ind = c("point"), col.ind = "cos2")
fviz_pca_var(t_pca, col.var = "contrib",repel = TRUE)
fviz_pca_biplot(t_pca, geom.ind = "point",repel = TRUE)
t.eig <- get_eig(t_pca)
t.var <- get_pca_var(t_pca)
t.ind <- get_pca_ind(t_pca)
ind.coord2 <- t.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
kmeansData = t_pca$rotation[,1:2]
cl <- kmeans(kmeansData, 2)
plot(kmeansData, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
