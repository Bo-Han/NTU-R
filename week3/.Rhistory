install.packages("rmarkdown")
install.packages("dplyr")
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_col()
if(!require(ggplot2))install.packages("gapminder",repos = "http://cran.us.r-project.org")
library(ggplot2)
library(dplyr)
library(dplyr)
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_col()
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_bar()
library(ggplot2)
iris
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(iris,aes(x=Species,y=Petal.Width))
+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))
+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+
goem_bar()
library(ggplot2)
library(dplyr)
iris
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
library(ggplot2)
library(dplyr)
iris
search()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+geom_bar()
ggplot(data=iris,aes(x=Species,y))+geom_bar()
ggplot(data=iris,aes(x=Species))+geom_bar()
iris
ggplot(data=iris,aes(x=Sepal.Width))+histogram()
ggplot(data=iris,aes(x=Sepal.Width))+geom_histogram()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length,color=Species))+geom_point()
iris
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length,color=Species,size=Petal.Length))+geom_point()
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length))+geom_point()+facet_wrap(~Species)
library(ggplot2)
library(dplyr)
ggplot(data=iris,aes(x=Species))+geom_bar()
ggplot(data=iris,aes(x=Sepal.Width))+geom_histogram()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length,color=Species,size=Petal.Length))+geom_point()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length))+geom_point()+facet_wrap(~Species)
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot()
ggplot(data=iris,aes(x=Sepal.Width))+geom_histogram()
installed.packages("comics")
library(comics)
installed.packages("Comics")
library(Comics)
Comics
Cars
library(Cars)
library(cars)
cars
comics
Immigration
install.packages("Immigration")
library(Immigration)
Immigration
install.packages("immigration")
library(immigration)
immigration
gapminder
library(gapminder)
gapminder
cluster
library(cluster)
cluster
life_exp_raw
installed.packages("life_exp_raw")
library(life_exp_raw)
life_exp_raw
comic
s
comics
names
library(names)
names
installed.packages("names")
comics data
comics_data
install.packages("openintro")
setwd("C:/Users/hank7/Desktop/summer/NTU-R/week3")
setwd("C:/Users/hank7/Desktop/summer/NTU-R/week3")
library(bitops)
library(httr)
library(RCurl)
library(tm)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
library(devtools)
install_github("ggbiplot", "vqv")
library(scales)
library(grid)
library(ggbiplot)
library(XML)
library(knitr)
d.corpus <- Corpus( DirSource("./DATA" ))
d.corpus <- tm_map(d.corpus, removePunctuation)
d.corpus <- tm_map(d.corpus, removeNumbers)
d.corpus <- tm_map(d.corpus, function(word) {
gsub("[A-Za-z0-9]", "", word)
})
mixseg = worker()
jieba_tokenizer = function(d)
{
unlist( segment(d[[1]], mixseg) )
}
seg = lapply(d.corpus, jieba_tokenizer)
count_token = function(d)
{
as.data.frame(table(d))
}
tokens = lapply(seg, count_token)
n = length(seg)
TDM = tokens[[1]]
colNames <- names(seg)
colNames <- gsub(".txt", "", colNames)
for( id in c(2:n) )
{
TDM = merge(TDM, tokens[[id]], by="d", all = TRUE)
names(TDM) = c('d', colNames[1:id])
}
TDM[is.na(TDM)] <- 0
kable(head(TDM))
tf <- apply(as.matrix(TDM[,2:(n+1)]), 2, sum)
library(Matrix)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
idf <- apply(as.matrix(TDM[,2:(n+1)]), 1, idfCal)
doc.tfidf <- TDM
tempY = matrix(rep(c(as.matrix(tf)), each = length(idf)), nrow = length(idf))
tempX = matrix(rep(c(as.matrix(idf)), each = length(tf)), ncol = length(tf), byrow = TRUE)
doc.tfidf[,2:(n+1)] <- (doc.tfidf[,2:(n+1)] / tempY) * tempX
stopLine = rowSums(doc.tfidf[,2:(n+1)])
delID = which(stopLine == 0)
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
tt=rbind(t,ti)
tt=tt[-121,]
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
class(ti[1,5])
class(t[2,5])
class(tt[2,5])
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
class(t[2,5])
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
class(tt[2,5])
tt=rbind(t,ti)
class(tt[2,5])
tt = apply(t, 2, as.numeric)
class(tt[2,5])
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
library(devtools)
data(iris)
ir.pca <- prcomp(iris[,1:4])
ir.species <- iris[, 5]
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1,
groups = ir.species, ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
scatter <- ggplot(data=iris, aes(x = Petal.Length, y = Sepal.Width))
scatter + geom_point(aes(color=Species, shape=Species)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
ir.pca
View(ir.pca)
View(t.pca)
View(t_pca)
ir.species
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1, groups=ti, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1, groups=2, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1,
groups = ir.species, ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
iris
ir.pca
t_pca
tt = as.data.frame(tt)
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
t_vec=c(1:120)
t_vec[1:80]='former80'
t_vec[81:120]='later40'
t_vec
t_group=as.data.frame(t_vec)
t_group=t(t_group)
t_group=as.data.frame(t_group)
t_group
View(t_group)
ir.species
t_group=as.factor(t_group)
idfCal <- function(word_doc)
{
log2( n / nnzero(word_doc) )
}
t_group
t_group=as.data.frame(t_vec)
t_group=t(t_group)
t_group=as.data.frame(t_group)
iris[, 5]
t_group=factor(t_vec,levels=c('former80','later40'))
t_group
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
iris[,1:4]
head(tt)
View(head(tt))
iris[,1:4]
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
print(p)
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
library(genefilter)
install.packages("genefilter")
install.packages("Bioconductor")
install.packages("bioconductor")
View(head(tt))
t = as.data.frame(t(doc.tfidf))
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
tt=rbind(t,ti)
tt=tt[-121,]
tt = apply(t, 2, as.numeric) #變成矩陣
tt=tt+0.0000000001
tt = as.data.frame(tt)
tt=data.frame()
t_vec=c(1:120)
t_vec[1:80]='former80'
t_vec[81:120]='later40'
t_group=factor(t_vec,levels=c('former80','later40'))
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
tt=rbind(t,ti)
tt=tt[-121,]
tt = apply(t, 2, as.numeric) #變成矩陣
tt=tt+0.0000000001
tt = as.data.frame(tt)
class(tt[2,5])
t_vec=c(1:120)
t_vec[1:80]='former80'
t_vec[81:120]='later40'
t_group=factor(t_vec,levels=c('former80','later40'))
View(head(tt))
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
ir.pca
t_pca = prcomp(tt)
t_pca
View(iris[,1:4])
?colnames
ti
colnames(tt)=as.vector(ti)
View(head(tt))
as.vector(ti)
colnames(tt)=ti
View(head(tt))
ti
View(ti)
t = as.data.frame(t(doc.tfidf))
t = apply(t[2:121,], 2, as.numeric)
t = as.data.frame(t)
ti = as.data.frame(t(doc.tfidf))
ti=ti[1,]
tt=rbind(t,ti)
tt=tt[-121,]
tt = apply(t, 2, as.numeric) #變成矩陣
tt=tt+0.0000000001
tt = as.data.frame(tt)
t_vec=c(1:120)
t_vec[1:80]='former80'
t_vec[81:120]='later40'
t_group=factor(t_vec,levels=c('former80','later40'))
t_pca = prcomp(tt)
p <- ggbiplot(t_pca, obs.scale = 1, var.scale = 1,groups=t_group, ellipse = TRUE, circle = TRUE)
p <- p + scale_color_discrete(name = '')
p <- p + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(p)
print(g)
scatter <- ggplot(data=iris, aes(x = Petal.Length, y = Sepal.Width))
scatter + geom_point(aes(color=Species, shape=Species)) +
xlab("Sepal Length") +  ylab("Sepal Width") +
ggtitle("Sepal Length-Width")
View(t_pca)
View(ir.pca)
