install.packages("rmarkdown")
install.packages("dplyr")
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_col()
if(!require(ggplot2))install.packages("gapminder",repos = "http://cran.us.r-project.org")
library(ggplot2)
library(dplyr)
library(dplyr)
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_col()
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_bar()
library(ggplot2)
iris
ggplot(iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(iris,aes(x=Species,y=Petal.Width))
+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))
+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+
goem_bar()
library(ggplot2)
library(dplyr)
iris
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
library(ggplot2)
library(dplyr)
iris
search()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+goem_bar()
ggplot(data=iris,aes(x=Species,y=Petal.Width))+geom_bar()
ggplot(data=iris,aes(x=Species,y))+geom_bar()
ggplot(data=iris,aes(x=Species))+geom_bar()
iris
ggplot(data=iris,aes(x=Sepal.Width))+histogram()
ggplot(data=iris,aes(x=Sepal.Width))+geom_histogram()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length,color=Species))+geom_point()
iris
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length,color=Species,size=Petal.Length))+geom_point()
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length))+geom_point()+facet_wrap(~Species)
library(ggplot2)
library(dplyr)
ggplot(data=iris,aes(x=Species))+geom_bar()
ggplot(data=iris,aes(x=Sepal.Width))+geom_histogram()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length,color=Species,size=Petal.Length))+geom_point()
ggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length))+geom_point()+facet_wrap(~Species)
ggplot(data=iris,aes(x=Species,y=Sepal.Length))+geom_boxplot()
ggplot(data=iris,aes(x=Sepal.Width))+geom_histogram()
setwd("C:/Users/hank7/Desktop/summer/NTU-R/week2")
library(ggplot2)
library(ggmap)
library(mapproj)
library(maps)
map <- get_map(location = c(lon = 121.555, lat = 25.0592), zoom = 12,language = "zh-TW",maptype = "toner-lite")
u <- read.csv("Address_Finish.csv")
ggmap(map) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=3 )
ggmap(map) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=1 )
ggmap(map) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.5 )
ggmap(map) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.8 )
ggmap(map) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
map <- get_map(location = c(lon = 121.555, lat = 25.0592), zoom = 12,language = "zh-TW",maptype = "toner-lite",extent = "device")
map <- get_map(location = c(lon = 121.555, lat = 25.0592), zoom = 12,language = "zh-TW",maptype = "toner-lite",alpha=0.5)
ggmap(map,alpha=0.5) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map,darken = c(0.5, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map,darken = c(0.7, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map,darken = c(0.8, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map,darken = c(0.1, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="red", size=0.9 )
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="blue", size=0.9 )
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="pink", size=0.9 )
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="orange", size=0.9 )
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
map <- get_map(location = c(lon = 121.555, lat = 25.0592), zoom = 12,language = "zh-TW",maptype = "toner-lite",textsize=10)
ggmap(map,darken = c(0.2, "white",textsize=10)) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
ggmap(map,darken = c(0.2, "white",textsize=15)) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
ggmap(map,darken = c(0.2, "white",textsize=20)) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
ggmap(map,darken = c(0.2, "white"size=20)) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
ggmap(map,darken = c(0.2, "white",size=20)) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
ggmap(map,darken = c(0.2, "white"),size=20) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
ggmap(map,darken = c(0.2, "white"),textsize=20) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
u <- read.csv("Address_Finish.csv")
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )+labs(title = "台北市102年到107年自行車竊盜分布地圖")
u <- read.csv("Address_Finish.csv")
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )+labs(title = "台北市102年到107年自行車竊盜分布地圖")
map <- get_map(location = c(lon = 121.555, lat = 25.0592), zoom = 12,language = "zh-TW",maptype = "toner-lite", legend = "topleft")
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 , legend = "topleft")+labs(title = "台北市102年到107年自行車竊盜分布地圖")
ggmap(map,darken = c(0.2, "white"), legend = "topleft") + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )+labs(title = "台北市102年到107年自行車竊盜分布地圖")
u <- read.csv("Address_Finish.csv")
ggmap(map,darken = c(0.2, "white"), legend = "topleft") + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )+labs(title = "台北市102年到107年自行車竊盜分布地圖")
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )+labs(title = "台北市102年到107年自行車竊盜分布地圖", legend = "topleft")
ggmap(map,darken = c(0.2, "white")) + geom_point(aes(x = Response_X, y = Response_Y ), data = u, color="purple", size=0.9 )+labs(title = "台北市102年到107年自行車竊盜分布地圖")
rm(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
filenames <- list.files(getwd(), pattern="*.txt")
files <- lapply(filenames, readLines)
docs <- Corpus(VectorSource(files))
#移除可能有問題的符號
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
}
)
docs <- tm_map(docs, toSpace, "※")
docs <- tm_map(docs, toSpace, "◆")
docs <- tm_map(docs, toSpace, "‧")
docs <- tm_map(docs, toSpace, "的")
docs <- tm_map(docs, toSpace, "我")
docs <- tm_map(docs, toSpace, "是")
docs <- tm_map(docs, toSpace, "看板")
docs <- tm_map(docs, toSpace, "作者")
docs <- tm_map(docs, toSpace, "發信站")
docs <- tm_map(docs, toSpace, "批踢踢實業坊")
docs <- tm_map(docs, toSpace, "[a-zA-Z]")
docs <- tm_map(docs, toSpace, "推")
docs <- tm_map(docs, toSpace, "就")
docs <- tm_map(docs, toSpace, "了")
docs <- tm_map(docs, toSpace, "不")
docs <- tm_map(docs, toSpace, "都")
docs <- tm_map(docs, toSpace, "也")
docs <- tm_map(docs, toSpace, "換")
docs <- tm_map(docs, toSpace, "你")
docs <- tm_map(docs, toSpace, "稅後")
docs <- tm_map(docs, toSpace, "要")
docs <- tm_map(docs, toSpace, "有")
docs <- tm_map(docs, toSpace, "可以")
docs <- tm_map(docs, toSpace, "到")
docs <- tm_map(docs, toSpace, "還")
docs <- tm_map(docs, toSpace, "沒")
docs <- tm_map(docs, toSpace, "會")
docs <- tm_map(docs, toSpace, "在")
docs <- tm_map(docs, toSpace, "大")
docs <- tm_map(docs, toSpace, "好")
docs <- tm_map(docs, toSpace, "覺得")
docs <- tm_map(docs, toSpace, "比較")
docs <- tm_map(docs, toSpace, "去")
docs <- tm_map(docs, toSpace, "買")
docs <- tm_map(docs, toSpace, "嗎")
docs <- tm_map(docs, toSpace, "啊")
docs <- tm_map(docs, toSpace, "人")
docs <- tm_map(docs, toSpace, "但")
docs <- tm_map(docs, toSpace, "看")
docs <- tm_map(docs, toSpace, "噓")
docs <- tm_map(docs, toSpace, "很")
docs <- tm_map(docs, toSpace, "跟")
docs <- tm_map(docs, toSpace, "說")
docs <- tm_map(docs, toSpace, "或")
docs <- tm_map(docs, toSpace, "元")
docs <- tm_map(docs, toSpace, "送")
docs <- tm_map(docs, toSpace, "一")
docs <- tm_map(docs, toSpace, "今天")
docs <- tm_map(docs, toSpace, "多")
docs <- tm_map(docs, toSpace, "只")
docs <- tm_map(docs, toSpace, "吧")
docs <- tm_map(docs, toSpace, "真")
docs <- tm_map(docs, toSpace, "徵")
docs <- tm_map(docs, toSpace, "用")
docs <- tm_map(docs, toSpace, "個")
docs <- tm_map(docs, toSpace, "想")
docs <- tm_map(docs, toSpace, "這")
docs <- tm_map(docs, toSpace, "什麼")
docs <- tm_map(docs, toSpace, "樣")
docs <- tm_map(docs, toSpace, "能")
docs <- tm_map(docs, toSpace, "點")
docs <- tm_map(docs, toSpace, "過")
#移除標點符號 (punctuation)
#移除數字 (digits)、空白 (white space)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, stripWhitespace)
docs
mixseg = worker()
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
freqFrame = freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE,fontFamily = "微软雅黑")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE,fontFamily = "微軟正黑")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=TRUE, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE,fontFamily = "標楷")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=F, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE,fontFamily = "標楷")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=F, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=T,use.r.layout=FALSE,
fixed.asp=TRUE,fontFamily = "標楷")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=F, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=F,use.r.layout=FALSE,
fixed.asp=TRUE,fontFamily = "標楷")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=F, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=F,use.r.layout=FALSE,
fixed.asp=F,fontFamily = "標楷")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=F, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=F,use.r.layout=FALSE,
fixed.asp=TRUE,fontFamily = "標楷")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=F, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=F,use.r.layout=FALSE,
fixed.asp=TRUE,shape = 'star')
install.packages("rJava")
install.packages("Rwordseg")
install.packages("SnowballC")
install.packages("slam")
docs <- tm_map(docs, toSpace, "店員")
mixseg = worker()
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
freqFrame = freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),min.freq=50,max.words=150,
random.order=F, random.color=FALSE,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=F,use.r.layout=FALSE,
fixed.asp=TRUE,shape = 'star')
